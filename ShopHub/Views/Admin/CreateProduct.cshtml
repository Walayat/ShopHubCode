@model ShopHub.Models.Dtos.ProductDto

@{
    ViewData["Title"] = "Creat Product";

}

    <div class="text-center">
        <h1>Create Product</h1>

        <hr />
        <div class="row">
            <div class="col-md-6 ProductDiv" >
                <form asp-action="CreateProduct">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="LocationId" class="control-label"></label>
                        <select asp-for="LocationId" class="form-control" asp-items="@(new SelectList(Model.Locations,"Id","Name"))"></select>
                    </div>
                    <div class="form-group">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Price" class="control-label"></label>
                        <input asp-for="Price" class="form-control" />
                        <span asp-validation-for="Price" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Quantity" class="control-label"></label>
                        <input asp-for="Quantity" class="form-control" />
                        <span asp-validation-for="Quantity" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>

        <div>
            <a asp-action="ProductList">Back to List</a>
        </div>
    </div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
